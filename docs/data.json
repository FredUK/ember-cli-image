{
    "project": {
        "name": "ember-cli-image",
        "description": "Stateful image components for Ember.js",
        "version": "0.0.1.4f898835"
    },
    "files": {
        "addon/components/internal/child-background-image-component.js": {
            "name": "addon/components/internal/child-background-image-component.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "addon/components/internal/child-img-component.js": {
            "name": "addon/components/internal/child-img-component.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "addon/components/background-image-component.js": {
            "name": "addon/components/background-image-component.js",
            "modules": {},
            "classes": {
                "BackgroundImageComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/image-container-component.js": {
            "name": "addon/components/image-container-component.js",
            "modules": {},
            "classes": {
                "ImageContainerComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/img-component.js": {
            "name": "addon/components/img-component.js",
            "modules": {},
            "classes": {
                "ImgComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/mixins/image-loader-mixin.js": {
            "name": "addon/mixins/image-loader-mixin.js",
            "modules": {},
            "classes": {
                "ImageLoaderMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/mixins/image-state-mixin.js": {
            "name": "addon/mixins/image-state-mixin.js",
            "modules": {},
            "classes": {
                "ImageState": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "BackgroundImageComponent": {
            "name": "BackgroundImageComponent",
            "shortname": "BackgroundImageComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "addon/components/background-image-component.js",
            "line": 4,
            "description": "Loads a stateful image for its css background-image.\nClass names are updated according to the image state.",
            "extends": "Ember.Component",
            "uses": [
                "ImageLoaderMixin"
            ]
        },
        "ImageContainerComponent": {
            "name": "ImageContainerComponent",
            "shortname": "ImageContainerComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "addon/components/image-container-component.js",
            "line": 8,
            "description": "A container component with a stateful image as a child component.\nClass names are updated according to the image's state.\n\nInstances of `ImageContainerComponent` can be created using the `image-container` Handlebars helper.\n```handlebars\n{{image-container src=\"img/image1.jpg\" alt=\"Image\" width=100 height=100}}\n```",
            "extends": "Ember.ContainerView",
            "uses": [
                "ImageStateMixin"
            ]
        },
        "ImgComponent": {
            "name": "ImgComponent",
            "shortname": "ImgComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "addon/components/img-component.js",
            "line": 4,
            "description": "`img-component` renders a stateful `<img>` element whose loading and\nerror states can be observed, and whose class names are updated accordingly.\n\nInstances of `img-component` can be created using the `stateful-img` Handlebars helper.\n```handlebars\n{{stateful-img src=\"img/image1.jpg\" alt=\"Image\" width=100 height=100}}\n```",
            "extends": "Ember.Component",
            "uses": [
                "ImageLoaderMixin"
            ]
        },
        "ImageLoaderMixin": {
            "name": "ImageLoaderMixin",
            "shortname": "ImageLoaderMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "BackgroundImageComponent",
                "ImgComponent"
            ],
            "file": "addon/mixins/image-loader-mixin.js",
            "line": 11,
            "description": "Mixin to load images and handle state changes from\nnative javascript image events.",
            "uses": [
                "Ember.Evented",
                "ImageStateMixin"
            ]
        },
        "ImageState": {
            "name": "ImageState",
            "shortname": "ImageState",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "addon/mixins/image-state-mixin.js",
            "line": 5,
            "description": "Mixin to track image loading/error state\nand update css classes accordingly."
        }
    },
    "classitems": [
        {
            "file": "addon/components/internal/child-background-image-component.js",
            "line": 4,
            "access": "private",
            "tagname": "BackgroundImageComponent class specifically for use in container views",
            "class": "BackgroundImageComponent"
        },
        {
            "file": "addon/components/internal/child-img-component.js",
            "line": 6,
            "description": "ImgComponent class specifically for use in container views",
            "class": "BackgroundImageComponent"
        },
        {
            "file": "addon/components/image-container-component.js",
            "line": 26,
            "description": "If `background` is true, the container uses a `BackgroundImageView`\nas its child image view instead of the default `ImgView`",
            "itemtype": "property",
            "name": "background",
            "type": "Boolean",
            "default": "false",
            "class": "ImageContainerComponent"
        },
        {
            "file": "addon/components/image-container-component.js",
            "line": 36,
            "description": "Proxy to child image's isLoading property",
            "itemtype": "property",
            "name": "isLoading",
            "type": "Boolean",
            "default": "false",
            "class": "ImageContainerComponent"
        },
        {
            "file": "addon/components/image-container-component.js",
            "line": 45,
            "description": "Proxy to child image's isError property",
            "itemtype": "property",
            "name": "isError",
            "type": "Boolean",
            "default": "false",
            "class": "ImageContainerComponent"
        },
        {
            "file": "addon/components/image-container-component.js",
            "line": 54,
            "description": "The child image component which is either an `ImgComponent` or\n`BackgroundImageComponent` based on the `background` property.",
            "itemtype": "property",
            "name": "imageView",
            "type": "Ember.View",
            "default": "Ember.ImgView",
            "class": "ImageContainerComponent"
        },
        {
            "file": "addon/components/image-container-component.js",
            "line": 69,
            "itemtype": "method",
            "name": "_addImageViewChild",
            "access": "private",
            "tagname": "Adds the sole child imageView",
            "class": "ImageContainerComponent"
        },
        {
            "file": "addon/components/image-container-component.js",
            "line": 78,
            "itemtype": "method",
            "name": "_onImageViewChanged\nObserves when the type of imageView is updated\nand recreates child views accordingly.",
            "class": "ImageContainerComponent"
        },
        {
            "file": "addon/components/img-component.js",
            "line": 21,
            "itemtype": "property",
            "name": "imageLoader",
            "type": "Object",
            "default": "the img element itself",
            "class": "ImgComponent"
        },
        {
            "file": "addon/components/img-component.js",
            "line": 28,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_cancelLoadOnDestroy\nCancels slow loading images when destroying view.\nEmber routing seems to hang otherwise.",
            "class": "ImgComponent"
        },
        {
            "file": "addon/mixins/image-loader-mixin.js",
            "line": 4,
            "access": "private",
            "tagname": "Smallest possible image data uri. 1x1 px transparent gif.\nUsed to cancel a image request in progress.",
            "class": "ImageLoaderMixin"
        },
        {
            "file": "addon/mixins/image-loader-mixin.js",
            "line": 20,
            "description": "JavaScript Image Object used to do the loading.",
            "itemtype": "property",
            "name": "imageLoader",
            "type": "Image",
            "default": "Image",
            "class": "ImageLoaderMixin"
        },
        {
            "file": "addon/mixins/image-loader-mixin.js",
            "line": 29,
            "description": "Loads the image src using native javascript Image object",
            "itemtype": "method",
            "name": "loadImage",
            "class": "ImageLoaderMixin"
        },
        {
            "file": "addon/mixins/image-loader-mixin.js",
            "line": 62,
            "description": "Cancels a pending image request.",
            "itemtype": "method",
            "name": "cancelImageLoad",
            "class": "ImageLoaderMixin"
        },
        {
            "file": "addon/mixins/image-loader-mixin.js",
            "line": 73,
            "description": "Clears an image to a blank state.\nUseful for canceling, or when swapping urls\n   Notes:\n   - Removing img from the DOM does not cancel an img http request.\n   - Setting img src to null has unexpected results cross-browser.",
            "class": "ImageLoaderMixin"
        },
        {
            "file": "addon/mixins/image-loader-mixin.js",
            "line": 88,
            "description": "Loads the image when the view is initially inserted",
            "itemtype": "method",
            "name": "loadImageOnInsert",
            "class": "ImageLoaderMixin"
        },
        {
            "file": "addon/mixins/image-loader-mixin.js",
            "line": 96,
            "description": "Load an image whenever the url is changed.",
            "itemtype": "method",
            "name": "loadImageOnUrlSet",
            "class": "ImageLoaderMixin"
        },
        {
            "file": "addon/mixins/image-loader-mixin.js",
            "line": 107,
            "access": "private",
            "tagname": "Remove image events when element is destroyed",
            "itemtype": "method",
            "name": "_teardownLoader",
            "class": "ImageLoaderMixin"
        },
        {
            "file": "addon/mixins/image-state-mixin.js",
            "line": 15,
            "itemtype": "property",
            "name": "src",
            "type": "String",
            "default": "null",
            "class": "ImageState"
        },
        {
            "file": "addon/mixins/image-state-mixin.js",
            "line": 22,
            "itemtype": "property",
            "name": "url",
            "type": "String",
            "default": "src\nThe final src to load. Gives mixins a chance to modify src",
            "class": "ImageState"
        },
        {
            "file": "addon/mixins/image-state-mixin.js",
            "line": 30,
            "itemtype": "property",
            "name": "isLoading",
            "type": "Boolean",
            "default": "if the src is initially set",
            "class": "ImageState"
        },
        {
            "file": "addon/mixins/image-state-mixin.js",
            "line": 37,
            "itemtype": "property",
            "name": "isError",
            "type": "Boolean",
            "default": "false",
            "class": "ImageState"
        },
        {
            "file": "addon/mixins/image-state-mixin.js",
            "line": 44,
            "itemtype": "property",
            "name": "loadingClass",
            "type": "String",
            "default": "'loading'",
            "class": "ImageState"
        },
        {
            "file": "addon/mixins/image-state-mixin.js",
            "line": 51,
            "itemtype": "property",
            "name": "errorClass",
            "type": "String",
            "default": "'error'",
            "class": "ImageState"
        },
        {
            "file": "addon/mixins/image-state-mixin.js",
            "line": 58,
            "access": "private",
            "tagname": "Computed property proxies for state classes\nso they can be easily overridden.",
            "itemtype": "property",
            "name": "errorClass",
            "class": "ImageState"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type",
            "line": " addon/components/internal/child-background-image-component.js:4"
        },
        {
            "message": "Missing item type\nImgComponent class specifically for use in container views",
            "line": " addon/components/internal/child-img-component.js:6"
        },
        {
            "message": "Missing item type",
            "line": " addon/mixins/image-loader-mixin.js:4"
        },
        {
            "message": "Missing item type\nClears an image to a blank state.\nUseful for canceling, or when swapping urls\n   Notes:\n   - Removing img from the DOM does not cancel an img http request.\n   - Setting img src to null has unexpected results cross-browser.",
            "line": " addon/mixins/image-loader-mixin.js:73"
        }
    ]
}